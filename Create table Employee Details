import java.util.*;

class Employee {
    // Fields for Employee details
    private int empId;
    private String empName;
    private String empAddress;
    private String empDesignation;
    private String empDepartment;
    private String empPhoneNo;
    private double empBasicPay;
    private double empHRA;
    private double empDA;
    private double empTA;
    private double empSalary;

    // Constructor to initialize Employee details and calculate Salary
    public Employee(int empId, String empName, String empAddress, String empDesignation, 
                    String empDepartment, String empPhoneNo, double empBasicPay) {
        this.empId = empId;
        this.empName = empName;
        this.empAddress = empAddress;
        this.empDesignation = empDesignation;
        this.empDepartment = empDepartment;
        this.empPhoneNo = empPhoneNo;
        this.empBasicPay = empBasicPay;
        
        // Calculating HRA, DA, and TA based on the basic pay
        this.empHRA = 0.10 * empBasicPay;
        this.empDA = 0.02 * empBasicPay;
        this.empTA = 0.02 * empBasicPay;

        // Calculating the total salary
        this.empSalary = empBasicPay + empHRA + empDA + empTA;
    }

    // Getter methods
    public double getEmpSalary() {
        return empSalary;
    }

    public String getEmpDepartment() {
        return empDepartment;
    }

    public String getEmpName() {
        return empName;
    }

    // Display Employee details
    public void display() {
        System.out.println("Emp ID: " + empId);
        System.out.println("Emp Name: " + empName);
        System.out.println("Emp Address: " + empAddress);
        System.out.println("Emp Designation: " + empDesignation);
        System.out.println("Emp Department: " + empDepartment);
        System.out.println("Emp Phone No: " + empPhoneNo);
        System.out.println("Emp Basic Pay: " + empBasicPay);
        System.out.println("Emp HRA: " + empHRA);
        System.out.println("Emp DA: " + empDA);
        System.out.println("Emp TA: " + empTA);
        System.out.println("Emp Total Salary: " + empSalary);
        System.out.println();
    }
}

public class EmployeeManagement {
    public static void main(String[] args) {
        // List to store employees
        List<Employee> employees = new ArrayList<>();

        // Adding some employees
        employees.add(new Employee(1, "John Doe", "123 Elm Street", "Manager", "HR", "555-1234", 50000));
        employees.add(new Employee(2, "Jane Smith", "456 Oak Avenue", "Developer", "IT", "555-5678", 60000));
        employees.add(new Employee(3, "Sam Wilson", "789 Pine Road", "Analyst", "Finance", "555-9876", 55000));
        employees.add(new Employee(4, "Sara Connor", "321 Birch Lane", "Developer", "IT", "555-8765", 65000));
        employees.add(new Employee(5, "Mark Ruffalo", "654 Cedar Street", "Analyst", "Finance", "555-4321", 70000));

        // Find the highest-paid employee in each department
        Map<String, Employee> highestPaidInDepartment = new HashMap<>();

        for (Employee emp : employees) {
            String department = emp.getEmpDepartment();
            if (!highestPaidInDepartment.containsKey(department) || 
                emp.getEmpSalary() > highestPaidInDepartment.get(department).getEmpSalary()) {
                highestPaidInDepartment.put(department, emp);
            }
        }

        // Displaying employees
        System.out.println("Employee Details:");
        for (Employee emp : employees) {
            emp.display();
        }

        // Display the highest-paid employee in each department
        System.out.println("Highest Paid Employees in Each Department:");
        for (Map.Entry<String, Employee> entry : highestPaidInDepartment.entrySet()) {
            System.out.println("Department: " + entry.getKey());
            entry.getValue().display();
        }
    }
}
